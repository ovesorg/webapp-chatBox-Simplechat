name: Documentation Check

on:
  pull_request:
    paths:
      - '**.md'
      - 'docs/**'
  push:
    branches:
      - main
    paths:
      - '**.md'
      - 'docs/**'

jobs:
  check-links:
    name: Check Documentation Links
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check Markdown links
        uses: gaurav-nelson/github-action-markdown-link-check@v2
        with:
          use-quiet-mode: 'yes'
          config-file: '.github/markdown-link-check-config.json'
  
  lint-markdown:
    name: Lint Markdown Files
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install markdownlint
        run: npm install -g markdownlint-cli

      - name: Lint Markdown
        run: markdownlint '**/*.md' --ignore node_modules --ignore build
        continue-on-error: true
  
  check-spelling:
    name: Check Spelling
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check spelling
        uses: streetsidesoftware/cspell-action@v2
        with:
          files: '**/*.md'
          incremental_files_only: false
        continue-on-error: true
  
  validate-structure:
    name: Validate Documentation Structure
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check required files
        run: |
          echo "Checking for required documentation files..."
          
          required_files=(
            "README.md"
            "CONTRIBUTING.md"
            "QUICKSTART.md"
            ".env.example"
            "docs/README.md"
            "docs/ARCHITECTURE.md"
            "docs/API.md"
            "docs/DEPLOYMENT.md"
            "docs/TESTING.md"
            "docs/SECURITY.md"
            "docs/FAQ.md"
            "docs/CHANGELOG.md"
            "docs/TROUBLESHOOTING.md"
            "docs/ROADMAP.md"
          )
          
          missing_files=()
          
          for file in "${required_files[@]}"; do
            if [ ! -f "$file" ]; then
              missing_files+=("$file")
            fi
          done
          
          if [ ${#missing_files[@]} -ne 0 ]; then
            echo "❌ Missing required documentation files:"
            printf '%s\n' "${missing_files[@]}"
            exit 1
          else
            echo "✅ All required documentation files present"
          fi

      - name: Check documentation completeness
        run: |
          echo "Checking documentation completeness..."
          
          # Check if README has minimum content
          if [ $(wc -l < README.md) -lt 50 ]; then
            echo "❌ README.md appears incomplete (less than 50 lines)"
            exit 1
          fi
          
          # Check if key sections exist in README
          required_sections=(
            "Features"
            "Installation"
            "Prerequisites"
            "Documentation"
          )
          
          for section in "${required_sections[@]}"; do
            if ! grep -q "$section" README.md; then
              echo "❌ README.md missing section: $section"
              exit 1
            fi
          done
          
          echo "✅ Documentation appears complete"
