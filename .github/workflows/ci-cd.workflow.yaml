name: CI/CD Pipeline for Chatbot Box Application
on:
  push:
    branches:
      - main
      - dev

env:
  REGISTRY_NAME: ghcr.io
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/ovbot-fe-${{ github.ref_name }}
  REGISTRY_USERNAME: ${{ github.actor }}
  REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
  BRANCH_NAME: ${{ github.ref_name }}
  HELM_REMOTE_REPO: https://github.com/${{ github.repository_owner }}/deployment-charts
  AUTHOR_NAME: ${{ github.actor }}
  AUTHOR_EMAIL: cruiseomondi90@gmail.com

permissions:
  contents: write
  packages: write
  issues: write
  pages: write
  id-token: write
  pull-requests: write

jobs:
  test-docker-build:
    name: Test Docker build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4
      - name: Build Docker image
        id: build-image
        run: docker build . --file ./docker/Dockerfile --tag ${{ env.IMAGE_NAME }}

  semantic-release:
    name: Semantic Release
    needs: test-docker-build
    runs-on: ubuntu-latest
    outputs:
      git_tag: ${{ steps.get_tag.outputs.git_tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install semantic-release and plugins
        run: |
          npm install -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog
      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        working-directory: .
        run: |
          npx semantic-release
      - name: Get Git Tag
        if: success()
        id: get_tag
        run: echo "git_tag=$(git describe --tags --abbrev=0)" >> $GITHUB_OUTPUT
      - name: Cleanup all node resources
        run: |
          npm uninstall -g semantic-release @semantic-release/git @semantic-release/github @semantic-release/changelog && \
          rm -rf node_modules && \
          rm -rf package-lock.json

  build-and-push:
    name: Build and push Docker Image
    needs: semantic-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture:
          - amd64
          - arm64
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        id: setup_qemu
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        id: setup_buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        id: login_to_registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY_NAME }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
      - name: Extract metadata (tags, labels) for Docker
        id: extract_metadata
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern=${{ needs.semantic-release.outputs.git_tag }}
            type=raw,value=${{ needs.semantic-release.outputs.git_tag }}
          labels: |
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT
            org.opencontainers.image.description=${{ needs.semantic-release.outputs.changelog }}
            org.opencontainers.image.url=https://github.com/${{ github.repository }}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}
            org.opencontainers.image.created=${{ steps.extract-metadata.outputs.created }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ needs.semantic-release.outputs.git_tag }}
          labels: ${{ steps.extract-metadata.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          outputs: type=image,name=target,annotation-index.org.opencontainers.image.description=${{ needs.semantic-release.outputs.changelog }}

  create-release:
    name: Create Release
    needs: [ semantic-release,build-and-push ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        id: checkout_repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ needs.semantic-release.outputs.git_tag }}-dev
          body: ${{ needs.semantic-release.outputs.changelog }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ env.REGISTRY_PASSWORD }}
      - name: Output Release ID and URL
        id: output_release
        run: |
          echo "release_id=$(echo ${{ steps.create_release.outputs.id }})" >> $GITHUB_OUTPUT
          echo "release_url=$(echo ${{ steps.create_release.outputs.html_url }})" >> $GITHUB_OUTPUT
          echo "release_tag=$(echo ${{ steps.create_release.outputs.tag_name }})" >> $GITHUB_OUTPUT
          echo "upload_url=$(echo ${{ steps.create_release.outputs.upload_url }})" >> $GITHUB_OUTPUT
      - name: Output Release URL
        id: output_url
        run: |
          echo "Release URL: ${{ steps.output_release.outputs.upload_url }}"

  update-manifest:
    name: Update Manifest
    runs-on: ubuntu-latest
    needs:
      - semantic-release
      - build-and-push
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          repository: ovesorg/deployment-charts
          ref: ${{env.BRANCH_NAME}}
          token: ${{env.REGISTRY_PASSWORD}}
      - name: Setup Git Config
        uses: jamie-codez/setup-git-user@v1
        with:
          username: ${{env.AUTHOR_NAME}}
          email: ${{env.AUTHOR_EMAIL}}
          remote-url: ${{env.HELM_REMOTE_REPO}}
      - name: Check values.yaml content
        run: cat chatbot-box/values.yaml
      - name: Update tag in values.yaml
        run: |
          echo ${{needs.semantic-release.outputs.git_tag}}
          sed -i "/^[[:space:]]*tag:/c\  tag: ${{needs.semantic-release.outputs.git_tag}}-${{env.BRANCH_NAME}}" chatbot-box/values.yaml
      - name: Check for changes
        run: |
          if ! git diff --quiet; then
            git add -A
            git commit -m "fix(ci-cd): :construction_worker: Updated image to ${{needs.build-and-push-image.outputs.git_tag}}"
            echo ${{github}}
            git push origin ${{env.BRANCH_NAME}}
          else
            echo "No changes to commit."
          fi